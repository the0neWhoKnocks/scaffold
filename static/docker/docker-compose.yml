version: "2" # using 2 because 3 doesn't support extending

services:
  #TOKEN:#DC__APP_NAME:
    build:
      context: ./
      dockerfile: .docker/Dockerfile
    container_name: #TOKEN:#DC__APP_NAME
    #TOKEN:^DC__VHOST
    depends_on:
      - "nginx-proxy"
    #TOKEN:$DC__VHOST
    environment:
      #TOKEN:^DC__MULTI_USER
      DATA_PATH: /home/node/app/data
      #TOKEN:$DC__MULTI_USER
      #TOKEN:^DC__NODE_CERTS
      NODE_EXTRA_CA_CERTS: /home/node/app/server/certs/localhost.crt
      #TOKEN:$DC__NODE_CERTS
      NODE_ENV: production
      #TOKEN:^DC__VHOST
      SERVER_PORT: ${VHOST__PORT__APP}
      #TOKEN:$DC__VHOST
      TZ: America/Los_Angeles
    #TOKEN:^DC__VHOST
      VHOST_PROXY_PORT: ${VHOST__PORT__PROXY}
      VIRTUAL_HOST: ${VHOST__DOMAIN}
      VIRTUAL_PORT: ${VHOST__PORT__APP}
    expose:
      - "${VHOST__PORT__APP}"
    #TOKEN:$DC__VHOST
    image: #TOKEN:#DC__USERNAME/#TOKEN:#DC__APP_NAME
    #TOKEN:^DC__PORTS
    ports:
      # Map Local port to the Container's exposed port
      - "3000:3000"
    #TOKEN:$DC__PORTS
    user: "${CURR_UID}:${CURR_GID}"
    volumes:
      # Map shell files over, so they're maintained between sessions
      - "${PWD}/.docker/.vimrc:/home/node/.vimrc"
      - "${PWD}/.docker/.zshrc:/home/node/.zshrc"
      - "${PWD}/.ignore:/home/node/dev" # allows for .zsh_history to be written
      #TOKEN:^DC__NODE_CERTS
      - "${PWD}/certs.localhost:/home/node/app/server/certs"
      #TOKEN:$DC__NODE_CERTS
      #TOKEN:^DC__MULTI_USER
      - "${PWD}/data:/home/node/app/data"
      #TOKEN:$DC__MULTI_USER
      # Uncomment to map Local assets
      # - "${PWD}/dist/public:/home/node/app/public"
      # - "${PWD}/dist/server:/home/node/app/server"
      # - "${PWD}/dist/utils:/home/node/app/utils"
      # - "${PWD}/dist/constants.js:/home/node/app/constants.js"
  
  #TOKEN:#DC__DEV_APP_NAME:
    extends: #TOKEN:#DC__APP_NAME # allows for just changing key pieces of data for development
    command: tail -F /dev/null # starts the container, and keeps it running
    container_name: #TOKEN:#DC__DEV_APP_NAME
    environment:
      NODE_ENV: development
    ports:
      #TOKEN:^DC__BSYNC
      # browserSync
      - "3001:3001"
      - "3002:3002"
      #TOKEN:$DC__BSYNC
      # inspector
      - "9229:9229"
    volumes:
      # Map the current directory over for development
      - "${PWD}:/home/node/app"
  #TOKEN:^DC__E2E
  
  e2e:
    build:
      context: ./e2e/
      dockerfile: Dockerfile
    # command: 'cypress run --browser chrome'
    container_name: e2e-#TOKEN:#DC__APP_NAME
    depends_on:
      - #TOKEN:#DC__APP_NAME
    # environment:
    #   # ELECTRON_ENABLE_LOGGING: 1 # view console logs from Browser (headless)
    #   # DEBUG: cypress:server:browsers:electron # view Electron internal logging
    hostname: cypresstests
    ipc: host # https://github.com/cypress-io/cypress/issues/350#issuecomment-267704772
    ports:
      - "3001:3000"
    privileged: true
    working_dir: /e2e
    volumes:
      - "${PWD}/e2e:/e2e"
      - "${PWD}/data:/app/data"
  #TOKEN:$DC__E2E
  #TOKEN:^DC__VHOST
  
  nginx-proxy:
    environment:
      DISABLE_ACCESS_LOGS: "true"
    image: nginxproxy/nginx-proxy:alpine
    ports:
      #TOKEN:^DC__VHOST_NON_SECURE
      - "${VHOST__PORT__PROXY}:80"
      #TOKEN:$DC__VHOST_NON_SECURE
      #TOKEN:^DC__VHOST_SECURE
      - "${VHOST__PORT__PROXY}:443"
      #TOKEN:$DC__VHOST_SECURE
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      #TOKEN:^DC__VHOST_SECURE
      - "${PWD}/certs.${VHOST__DOMAIN}:/etc/nginx/certs"
      #TOKEN:$DC__VHOST_SECURE
      # Uncomment to view the generated config
      # - "${PWD}/.docker/vhost/conf.d:/etc/nginx/conf.d"
  #TOKEN:$DC__VHOST
